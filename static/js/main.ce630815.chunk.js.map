{"version":3,"sources":["components/TicTacTac.js","App.js","reportWebVitals.js","index.js"],"names":["TicTacToe","useState","turn","setTurn","Array","fill","cells","setCells","winner","setWinner","handleClick","num","squares","combos","across","down","diagnol","combo","forEach","pattern","checkForWinner","alert","Cell","onClick","className","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA6GeA,EA1GG,WACjB,MAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAASG,MAAM,GAAGC,KAAK,KAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KAsCMC,EAAc,SAACC,GACpB,GAAmB,KAAfL,EAAMK,GAAV,CAKA,IAAIC,EAAO,YAAON,GAEL,MAATJ,GACHU,EAAQD,GAAO,IACfR,EAAQ,OAERS,EAAQD,GAAO,IACfR,EAAQ,MAjDa,SAACS,GACvB,IAAIC,EAAS,CACZC,OAAQ,CACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAERC,KAAM,CACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAERC,QAAS,CACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIT,IAAK,IAAIC,KAASJ,EACjBA,EAAOI,GAAOC,SAAQ,SAACC,GAEG,KAAxBP,EAAQO,EAAQ,KACQ,KAAxBP,EAAQO,EAAQ,KACQ,KAAxBP,EAAQO,EAAQ,KAIhBP,EAAQO,EAAQ,MAAQP,EAAQO,EAAQ,KACxCP,EAAQO,EAAQ,MAAQP,EAAQO,EAAQ,KAExCV,EAAUG,EAAQO,EAAQ,QAsB7BC,CAAeR,GACfL,EAASK,QAfRS,MAAM,oBAuBFC,EAAO,SAAC,GAAa,IAAXX,EAAU,EAAVA,IACf,OAAO,oBAAIY,QAAS,kBAAMb,EAAYC,IAA/B,SAAsCL,EAAMK,MAGpD,OACO,qCACA,oBAAIa,UAAU,UAAd,yBACA,oBAAGA,UAAU,aAAb,oBAAkCtB,EAAlC,QACN,sBAAKsB,UAAU,YAAf,UACC,gCACC,kCACC,+BACC,cAACF,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,OAEZ,+BACC,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,OAEZ,+BACC,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,YAIbH,GACA,mCACC,8BAAIA,EAAJ,uBAIO,wBAAQiB,GAAK,MAAMF,QAAS,kBAtCtCd,EAAU,WACVF,EAASH,MAAM,GAAGC,KAAK,MAqCb,gCC3FGqB,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCKSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ce630815.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './TicTacToe.css';\r\n\r\nconst TicTacToe = () => {\r\n\tconst [turn, setTurn] = useState('X');\r\n\tconst [cells, setCells] = useState(Array(9).fill(''));\r\n\tconst [winner, setWinner] = useState();\r\n\r\n\tconst checkForWinner = (squares) => {\r\n\t\tlet combos = {\r\n\t\t\tacross: [\r\n\t\t\t\t[0, 1, 2],\r\n\t\t\t\t[3, 4, 5],\r\n\t\t\t\t[6, 7, 8],\r\n\t\t\t],\r\n\t\t\tdown: [\r\n\t\t\t\t[0, 3, 6],\r\n\t\t\t\t[1, 4, 7],\r\n\t\t\t\t[2, 5, 8],\r\n\t\t\t],\r\n\t\t\tdiagnol: [\r\n\t\t\t\t[0, 4, 8],\r\n\t\t\t\t[2, 4, 6],\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\tfor (let combo in combos) {\r\n\t\t\tcombos[combo].forEach((pattern) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tsquares[pattern[0]] === '' ||\r\n\t\t\t\t\tsquares[pattern[1]] === '' ||\r\n\t\t\t\t\tsquares[pattern[2]] === ''\r\n\t\t\t\t) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tsquares[pattern[0]] === squares[pattern[1]] &&\r\n\t\t\t\t\tsquares[pattern[1]] === squares[pattern[2]]\r\n\t\t\t\t) {\r\n\t\t\t\t\tsetWinner(squares[pattern[0]]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (num) => {\r\n\t\tif (cells[num] !== '') {\r\n\t\t\talert('Already Clicked');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet squares = [...cells];\r\n\r\n\t\tif (turn === 'X') {\r\n\t\t\tsquares[num] = 'X';\r\n\t\t\tsetTurn('O');\r\n\t\t} else {\r\n\t\t\tsquares[num] = 'O';\r\n\t\t\tsetTurn('X');\r\n\t\t}\r\n\r\n\t\tcheckForWinner(squares);\r\n\t\tsetCells(squares);\r\n\t};\r\n\r\n\tconst handleRestart = () => {\r\n\t\tsetWinner(null);\r\n\t\tsetCells(Array(9).fill(''));\r\n\t};\r\n\r\n\tconst Cell = ({ num }) => {\r\n\t\treturn <td onClick={() => handleClick(num)}>{cells[num]}</td>;\r\n\t};\r\n\r\n\treturn (\r\n        <>\r\n        <h1 className=\"heading\">Tic Tac Toe</h1>\r\n        <p className=\"TurnDetail\">Turn : {turn}'S</p>\r\n\t\t<div className='container'>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<Cell num={0} />\r\n\t\t\t\t\t\t<Cell num={1} />\r\n\t\t\t\t\t\t<Cell num={2} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<Cell num={3} />\r\n\t\t\t\t\t\t<Cell num={4} />\r\n\t\t\t\t\t\t<Cell num={5} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<Cell num={6} />\r\n\t\t\t\t\t\t<Cell num={7} />\r\n\t\t\t\t\t\t<Cell num={8} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t{winner && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p>{winner} is the Winner!</p>\r\n\t\t\t\t\t\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n            <button id = \"btn\" onClick={() => handleRestart()}>Clear Board</button>\r\n\t\t</div>\r\n        </>\r\n\t);\r\n};\r\n\r\nexport default TicTacToe;","\nimport './App.css';\nimport TicTacToe from './components/TicTacTac';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TicTacToe />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}